{"version":3,"sources":["types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","todos","setTodoModal","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","buttonEye","TodoFilter","setFilterSelect","setInputSelect","inputSelect","onChange","e","target","value","placeholder","style","pointerEvents","all","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","useState","user","setUser","useEffect","getUser","userInData","name","email","href","App","todoList","setTodoList","setSelectedTodo","filterSelect","getFilteringList","useMemo","filter","lowerCase","toLowerCase","active","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5080851.chunk.js","sourcesContent":["export enum Select {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  setTodoModal: (selectedTodo: Todo | null) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoModal,\n  selectedTodo,\n}) => {\n  const buttonEye: (todo: Todo) => void = (todo) => {\n    setTodoModal(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos?.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={\n              classNames(\n                { 'has-background-info-light': selectedTodo?.id === todo.id },\n              )\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  buttonEye(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Select } from '../../types/Select';\n\ntype Props = {\n  setFilterSelect: (filterSelect: Select | string) => void;\n  setInputSelect: (inputSelect: string) => void;\n  inputSelect: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterSelect,\n  setInputSelect,\n  inputSelect,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => {\n              setFilterSelect(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputSelect}\n          onChange={e => {\n            setInputSelect(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputSelect && (\n          <span className=\"icon is-right\" style={{ pointerEvents: Select.all }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setInputSelect('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setTodoModal: (selectedTodo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setTodoModal,\n}) => {\n  const {\n    id, title, completed, userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userInData => {\n        setUser(userInData);\n      });\n  }, []);\n\n  const handleClick: () => void = () => {\n    setTodoModal(null);\n    setUser(null);\n  };\n\n  const { name, email } = user || {};\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterSelect, setFilterSelect] = useState<Select | string>(Select.all);\n  const [inputSelect, setInputSelect] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodoList);\n  }, []);\n\n  const filter = () => {\n    const filteringArray = todoList && [...todoList].filter(todo => {\n      const lowerCase = todo.title.toLowerCase();\n\n      switch (filterSelect) {\n        case Select.active:\n          return !todo.completed && lowerCase.includes(inputSelect.toLowerCase());\n        case Select.completed:\n          return todo.completed && lowerCase.includes(inputSelect.toLowerCase());\n        default:\n          return true && lowerCase.includes(inputSelect.toLowerCase());\n      }\n    });\n\n    return filteringArray;\n  };\n\n  const getFilteringList = useMemo(filter, [todoList, filterSelect, inputSelect]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterSelect={setFilterSelect}\n                setInputSelect={setInputSelect}\n                inputSelect={inputSelect}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todoList ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={getFilteringList}\n                  setTodoModal={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setTodoModal={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}